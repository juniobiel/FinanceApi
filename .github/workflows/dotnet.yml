name: FINANCE API DOTNET PIPELINE

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./Finance.sln
    - name: Build
      run: dotnet build --no-restore ./Finance.sln
    - name: Test
      run: dotnet test --no-build --verbosity normal ./Finance.sln
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: gabrieljunio/finance-api:latest

  deploy:
    name: Deploy into Gcloud Account
    runs-on: ubuntu-latest
    # Environment Production
    environment: finance-prod
    env:
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/finance-api:latest
    steps:
      # Git checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Login to GCP
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # gcloud configure docker
      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      # build image
      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      # push image to registry
      - name: Push Docker image
        run: docker push $IMAGE_NAME

      # deploy image
      - name: Deploy Docker image
        run: gcloud run deploy finance-api 
            --image $IMAGE_NAME --region southamerica-east1 
            --memory 128Mi --min-instances 0 --max-instances 1 
            --platform managed --port 80 --allow-unauthenticated 
            --set-env-vars DefaultConnection=${{ secrets.POSTGRES_CONNECTION }}
